{"version":3,"sources":["webpack://@sycho/flarum-asirem/webpack/bootstrap","webpack://@sycho/flarum-asirem/webpack/runtime/compat get default export","webpack://@sycho/flarum-asirem/webpack/runtime/define property getters","webpack://@sycho/flarum-asirem/webpack/runtime/hasOwnProperty shorthand","webpack://@sycho/flarum-asirem/webpack/runtime/make namespace object","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['common/extend']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['tags/components/TagsPage']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['components/IndexPage']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['components/Link']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['helpers/listItems']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['tags/common/helpers/tagIcon']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['tags/common/helpers/tagLabel']\"","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['tags/common/utils/sortTags']\"","webpack://@sycho/flarum-asirem/./src/forum/components/TagsPage.js","webpack://@sycho/flarum-asirem/external \"flarum.core.compat['utils/string']\"","webpack://@sycho/flarum-asirem/./src/forum/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","TagsPage","view","this","loading","pinned","tags","filter","tag","position","cloud","className","IndexPage","listItems","toArray","map","lastPostedDiscussion","children","sortTags","tagIconNode","tagIcon","useColor","attrs","style","backgroundColor","color","href","app","route","name","description","length","child","discussion","lastPostNumber","title","humanTime","lastPostedAt","tagLabel","link","initializers","add","override","AsiremTagsPage"],"mappings":"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","file":"forum.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/components/TagsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/common/helpers/tagIcon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/common/helpers/tagLabel'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/common/utils/sortTags'];","import IndexPage from 'flarum/components/IndexPage';\nimport Link from 'flarum/components/Link';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport listItems from 'flarum/helpers/listItems';\nimport humanTime from 'flarum/helpers/humanTime';\n\nimport tagIcon from 'flarum/tags/common/helpers/tagIcon';\nimport tagLabel from 'flarum/tags/common/helpers/tagLabel';\nimport sortTags from 'flarum/tags/common/utils/sortTags';\n\nexport default class TagsPage {\n  view() {\n    if (this.loading) {\n      return <LoadingIndicator />;\n    }\n\n    const pinned = this.tags.filter((tag) => tag.position() !== null);\n    const cloud = this.tags.filter((tag) => tag.position() === null);\n\n    return (\n      <div className=\"Asirem-TagsPage\">\n        {IndexPage.prototype.hero()}\n        <div className=\"sideNavContainer container\">\n          <nav className=\"TagsPage-nav IndexPage-nav sideNav\">\n            <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n          </nav>\n\n          <div className=\"TagsPage-content sideNavOffset\">\n            <ul className=\"Asirem-TagTiles\">\n              {pinned.map((tag) => {\n                const lastPostedDiscussion = tag.lastPostedDiscussion();\n                const children = sortTags(tag.children() || []);\n                const tagIconNode = tagIcon(tag, {}, { useColor: false });\n\n                delete tagIconNode.attrs.style.backgroundColor;\n\n                return (\n                  <li className={'Asirem-TagTile ' + (tag.color() ? 'colored' : '')} style={{ '--tag-bg': tag.color() }}>\n                    <Link className=\"Asirem-TagTile-info\" href={app.route.tag(tag)}>\n                      <div className=\"Asirem-TagTile-icon\">{tagIconNode}</div>\n                      <div className=\"Asirem-TagTile-content\">\n                        <h3 className=\"Asirem-TagTile-name\">{tag.name()}</h3>\n                        <p className=\"Asirem-TagTile-description\">{tag.description()}</p>\n                        {children && children.length ? (\n                          <div className=\"Asirem-TagTile-children\">\n                            {children.map((child) => [\n                              <Link href={app.route.tag(child)} className=\"TagLabel\">\n                                {child.name()}\n                              </Link>,\n                              ' ',\n                            ])}\n                          </div>\n                        ) : (\n                          ''\n                        )}\n                        {lastPostedDiscussion ? (\n                          <Link\n                            className=\"Asirem-TagTile-lastPostedDiscussion\"\n                            href={app.route.discussion(lastPostedDiscussion, lastPostedDiscussion.lastPostNumber())}\n                          >\n                            <span className=\"Asirem-TagTile-lastPostedDiscussion-title\">{lastPostedDiscussion.title()}</span>\n                            {humanTime(lastPostedDiscussion.lastPostedAt())}\n                          </Link>\n                        ) : (\n                          <span className=\"Asirem-TagTile-lastPostedDiscussion\" />\n                        )}\n                      </div>\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n\n            {cloud.length ? <div className=\"Asirem-TagCloud\">{cloud.map((tag) => [tagLabel(tag, { link: true }), ' '])}</div> : ''}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/string'];","import { extend, override } from 'flarum/common/extend';\nimport TagsPage from 'flarum/tags/components/TagsPage';\nimport AsiremTagsPage from './components/TagsPage';\nimport { truncate } from 'flarum/utils/string';\n\napp.initializers.add('custom-tagspage', () => {\n  override(TagsPage.prototype, 'view', AsiremTagsPage.prototype.view);\n});\n"],"sourceRoot":""}